@model AcademyModel
@{
    ViewData["PageMainTitle"] = T("Admin.Configuration.Academies.Title");
    ViewData["PageTitle"] = Model.Id == 0 ? T("Admin.Configuration.Academies.Add") : T("Admin.Configuration.Academies.Edit");
    ViewData["SystemTitle"] = ViewData["PageTitle"] + " / " + ViewData["PageMainTitle"];
    ViewData["ControllerName"] = "Academy";

    @if (Model.Id == 0)
    {
        Model.IsActive = true;
        Model.Deleted = false;
        Model.ShowOn = true;
        Model.DisplayOrder = 0;
    }
}
<div class="content  d-flex flex-column flex-column-fluid" id="kt_content">
    <div class="subheader py-2 py-lg-6  subheader-solid " id="kt_subheader">
        <div class=" container-fluid  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <div class="d-flex align-items-center flex-wrap mr-1">
                <div class="d-flex align-items-baseline flex-wrap mr-5">
                    <h5 class="text-dark font-weight-bold my-1 mr-5">
                        @ViewData["PageTitle"]
                    </h5>
                    <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                        <li class="breadcrumb-item">
                            <a href="/admin/@ViewData["ControllerName"]" class="text-muted">
                                @ViewData["PageMainTitle"]
                            </a>
                        </li>
                        <li class="breadcrumb-item">
                            @if (Model.Id == 0)
                            {
                                <b>@T("admin.common.new")</b>
                            }
                            else
                            {
                                @Model.Title
                            }
                        </li>
                    </ul>
                </div>
            </div>
            <div class="d-flex align-items-center">
                <partial name="_AddOrEditHeaderButtons" model="@Tuple.Create(Model.Id,"AcademyForm")" />
            </div>
        </div>
    </div>
    <div class="d-flex flex-column-fluid">
        <div class="container-fluid">
            <div class="card card-custom">
                <div class="card-body">
                    <WCore-tabs id="academy-edit" asp-tab-name-to-select="tab-details" asp-render-selected-tab-input="false">
                        <WCore-tab asp-name="tab-details" asp-title="@T("Admin.Configuration.Details")" asp-default="true">
                            <form id="AcademyForm" asp-action="AddOrEdit" asp-controller="@ViewData["ControllerName"]" enctype="multipart/form-data">
                                <div class="form-group row">
                                    <WCore-label asp-for="AcademyCategoryId" />
                                    <div class="col-lg-10 col-md-6 col-sm-12">
                                        <WCore-select asp-for="AcademyCategoryId" class="form-control form-control-sm form-control-solid" />
                                    </div>
                                </div>
                                @(Html.LocalizedEditor<AcademyModel, AcademyLocalizedModel>("skiresort-localized",
                                @<div>
                                    <div class="form-group row">
                                        <WCore-label asp-for="Locales[item].Title" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <WCore-editor asp-for="Locales[item].Title"  asp-type="form-control form-control-sm form-control-solid" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <WCore-label asp-for="Locales[item].SeName" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <WCore-editor asp-for="Locales[item].SeName" asp-type="form-control form-control-sm form-control-solid" />
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <WCore-label asp-for="Locales[item].Body" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <WCore-editor asp-for="Locales[item].Body" asp-template="RichEditor" />
                                        </div>
                                    </div>
                                     <input type="hidden" asp-for="@Model.Locales[item].LanguageId" />
                                </div>,
                                @<div>
                                    <div class="form-group row">
                                        <WCore-label asp-for="Title" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <WCore-editor asp-for="Title"   asp-required="true" asp-type="form-control form-control-sm form-control-solid" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <WCore-label asp-for="SeName" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <WCore-editor asp-for="SeName" asp-type="form-control form-control-sm form-control-solid" />
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <WCore-label asp-for="Body" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <WCore-editor asp-for="Body"  asp-template="RichEditor"  />
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <WCore-label asp-for="Image" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            @if (!string.IsNullOrEmpty(Model.Image))
                                            {
                                                <img src="@Model.Image" style="max-height:200px; margin-bottom:15px; border:1px solid #cecece;" />
                                            }
                                            <input type="file" name="Image" accept="image/gif, image/jpeg, image/png" id="Image" class="form-control pt-2" />
                                        </div>
                                    </div>
                                    <div class="form-group row mb-3">
                                        <WCore-label asp-for="Banner" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            @if (!string.IsNullOrEmpty(Model.Banner))
                                            {
                                                <img src="@Model.Banner" style="max-height:200px; margin-bottom:15px; border:1px solid #cecece;" />
                                            }
                                            <input type="file" name="Banner" accept="image/gif, image/jpeg, image/png" id="Image" class="form-control pt-2" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <WCore-label asp-for="DisplayOrder" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <WCore-editor asp-for="DisplayOrder" asp-type="form-control form-control-sm form-control-solid" />
                                        </div>
                                    </div>
                                    <div class="form-group mb-0 row">
                                        <WCore-label asp-for="ShowOn" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <div class="checkbox-inline">
                                                <label class="checkbox pt-3">
                                                    <input asp-for="ShowOn" />
                                                    <span></span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb-0 row">
                                        <WCore-label asp-for="IsArchived" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <div class="checkbox-inline">
                                                <label class="checkbox pt-3">
                                                    <input asp-for="IsArchived" />
                                                    <span></span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb-0 row">
                                        <WCore-label asp-for="IsActive" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <div class="checkbox-inline">
                                                <label class="checkbox pt-3">
                                                    <input asp-for="IsActive" />
                                                    <span></span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb-0 row">
                                        <WCore-label asp-for="Deleted" />
                                        <div class="col-lg-10 col-md-6 col-sm-12">
                                            <div class="checkbox-inline">
                                                <label class="checkbox pt-3">
                                                    <input asp-for="Deleted" />
                                                    <span></span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>))
                                <input type="hidden" asp-for="Id" />
                            </form>
                        </WCore-tab>
                        @if (Model.Id != 0)
                        {
                            <WCore-tab asp-name="tab-academyimages" asp-title="@T("Admin.Configuration.AcademyImages")">
                                <input type="file"
                                       class="filepond"
                                       name="images"
                                       multiple
                                       data-allow-reorder="true"
                                       data-max-file-size="3MB"
                                       data-max-files="10">

                                <div id="academyimage_datatable" class="pTable"></div>
                            </WCore-tab>
                            <WCore-tab asp-name="tab-academyfiles" asp-title="@T("Admin.Configuration.AcademyFiles")">
                                <input type="file"
                                       class="filepond"
                                       name="files"
                                       multiple
                                       data-allow-reorder="true"
                                       data-max-file-size="3MB"
                                       data-max-files="10">

                                <div id="academyfile_datatable" class="pTable"></div>
                            </WCore-tab>
                            <WCore-tab asp-name="tab-academyvideos" asp-title="@T("Admin.Configuration.AcademyVideos")">
                                <div id="academyvideo_datatable" class="pTable"></div>
                            </WCore-tab>
                        }
                    </WCore-tabs>
                </div>
            </div>

        </div>
    </div>
</div>



@section Scripts{
    <style>
        /*** FilePond Custom Styles*/
        .filepond--drop-label {
            color: #4c4e53;
        }

        .filepond--label-action {
            text-decoration-color: #babdc0;
        }

        .filepond--panel-root {
            border-radius: 2em;
            background-color: #edf0f4;
            height: 1em;
        }

        .filepond--item-panel {
            background-color: #595e68;
        }

        .filepond--drip-blob {
            background-color: #7f8a9a;
        }
    </style>
    <!-- add before </body> -->
    <script>
        $(function () {
            // First register any plugins
            $.fn.filepond.registerPlugin(FilePondPluginImagePreview);

            // Set allowMultiple property to true
            $('.filepond[name="images"]').filepond({
                allowMultiple: true,
                server: {
                    url: '/admin/academy',
                    timeout: 7000,
                    process: {
                        url: '/AcademyImage',
                        method: 'POST',
                        withCredentials: false,
                        onload: (response) => response.key,
                        onerror: (response) => response.data,
                        ondata: (formData) => {
                            formData.append('AcademyId', @Model.Id);
                            return formData;
                        }
                    }
                }
            });

            // Set allowMultiple property to true
            $('.filepond[name="files"]').filepond({
                allowMultiple: true,
                server: {
                    url: '/admin/academy',
                    timeout: 7000,
                    process: {
                        url: '/AcademyFile',
                        method: 'POST',
                        withCredentials: false,
                        onload: (response) => response.key,
                        onerror: (response) => response.data,
                        ondata: (formData) => {
                            formData.append('AcademyId', @Model.Id);
                            return formData;
                        }
                    }
                }
            });

        });
    </script>
    <script>
        $("#AcademyForm").submit(function (e) {
            e.preventDefault();
            var data = new FormData();
            //Form data
            var form_data = $('#AcademyForm').serializeArray();
            $.each(form_data, function (key, input) {
                var inputId = $("[name='" + input.name + "']").attr("id");
                var editor = tinyMCE.editors[inputId];
                var IsEditor = editor == null ? false : true;
                if (IsEditor) {
                    var myContent = editor.getContent();
                    data.append(input.name, myContent);
                }
                else {
                    data.append(input.name, input.value);
                }
            });
            //File data
            var file_data = $("input[type='file']");
            for (var i = 0; i < file_data.length; i++) {
                var f = file_data[i];
                data.append(f.name, f.files[0]);
            }
            var url = $(this).attr('action');
            var id = @Model.Id;
            $.ajax({
                type: "POST",
                url: "/admin/"+url,
                processData: false,
                contentType: false,
                data: data,
                success: function (data) {
                    if (id == 0) {
                        window.location.href = "/admin/academy";
                    }
                    else if (!data.continueEditing) {
                        Swal.fire({
                            title: '@T("admin.notification.success")',
                            text: "@T("admin.notification.editcontinue")",
                            icon: 'success',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Evet',
                            cancelButtonText: 'Hayır',
                            timer: 3000,
                            timerProgressBar: true
                        }).then((result) => {
                            if (!result.value) {
                                window.location.href = "/admin/academy/addoredit/" + $("#SkiSchoolId").val();
                            }
                        })
                    }
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            GetAcademyCategorySelectList($("#AcademyForm #AcademyCategoryId"),"@T("Admin.Configuration.AcademyCategory") @T("Admin.Configuration.Select")", @Model.AcademyCategoryId, true, false);

            $("#academyimage_datatable").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/Admin/Academy/GetAcademyImageFilteredItems",
                            type: "POST",
                            dataType: "json",
                            data: function () {
                                var data = {
                                    "AcademyId": '@Model.Id'
                                };
                                addAntiForgeryToken(data);
                                return data;
                            }
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "RecordsFiltered",
                        errors: "Errors"
                    },
                    requestEnd: function (e) {
                        if (e.type == "create" || e.type == "update") {
                            this.read();
                        }
                    },
                    error: function (e) {
                        console.log(e);
                        this.cancelChanges();
                    },
                    pageSize: 10,
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true,
                    pageSizes: [10, 15, 20, 50, 100, 200, 300, 500, 1000, 3000],
                    @Html.Partial("_GridPagerMessages")
                },
                filterable: true,
                scrollable: false,
                columns: [{
                        field: "Small",
                        title: "@T("Admin.Configuration.Small")",
                        template: '<a href=javascript:void(0)" data-href="/Admin/Academy/AcademyImage/#=Id#?AcademyId=#=AcademyId#" class="openModal btn-sm btn btn-link" title="Edit details" data-id="#=Id#">\
                                       <img src="#=Small#" style="height:100px">\
                                   </a>',
                    },{
                        field: "Title",
                        title: "@T("Admin.Configuration.Title")"
                    },{
                        field: "Slogan",
                        title: "@T("Admin.Configuration.Slogan")"
                    },{
                        field: "Description",
                        title: "@T("Admin.Configuration.Description")"
                    },{
                        field: "Id",
                        title: "@T("admin.common.delete")",
                        width: 80,
                        filterable: false,
                        headerAttributes: { style: "text-align:center" },
                        attributes: { style: "text-align:center" },
                        template: '<a href="javascript:void(0)" data-id="#=Id#" class="btn btn-sm btn-clean btn-icon Delete" title="Delete">\
                                        <i class="la la-trash"></i>\
                                    </a>'
                    }
                ]
            });
            $("body").on("click", "#academyimage_datatable .Delete", function () {
                Swal.fire({
                    title: 'Eminmisiniz?',
                    text: "Kaydı silmek istediğiniz eminmisiniz?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet',
                    cancelButtonText: 'Hayır',
                    timer: 3000,
                    timerProgressBar: true
                }).then((result) => {
                    if (result.value) {
                        var id = $(this).attr("data-id");
                        var entityKey = $(this).attr("data-key");
                        var entityGrop = $(this).attr("data-group");
                        $.ajax({
                            type: "POST",
                            url: '/admin/academy/AcademyImage',
                            data: { id: id, entityKey: entityKey, entityGrop: entityGrop, delete: true },
                            success: function (data) {
                                $("#academyimage_datatable").data("kendoGrid").dataSource.read();
                                Swal.fire({
                                    title: 'Başarılı',
                                    icon: 'success',
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                    timerProgressBar: true
                                });
                            },
                            error: function (d) {
                                console.log(d);
                            }
                        });
                    }
                })
            });

            $("#academyfile_datatable").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/Admin/Academy/GetAcademyFileFilteredItems",
                            type: "POST",
                            dataType: "json",
                            data: function () {
                                var data = {
                                    "AcademyId": '@Model.Id'
                                };
                                addAntiForgeryToken(data);
                                return data;
                            }
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "RecordsFiltered",
                        errors: "Errors"
                    },
                    requestEnd: function (e) {
                        if (e.type == "create" || e.type == "update") {
                            this.read();
                        }
                    },
                    error: function (e) {
                        console.log(e);
                        this.cancelChanges();
                    },
                    pageSize: 10,
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true,
                    pageSizes: [10, 15, 20, 50, 100, 200, 300, 500, 1000, 3000],
                    @Html.Partial("_GridPagerMessages")
                },
                filterable: true,
                scrollable: false,
                columns: [{
                        field: "Title",
                        title: " @T("Admin.Configuration.Title")",
                        template: '<a href=javascript:void(0)" data-href="/Admin/Academy/AcademyFile/#=Id#?AcademyId=#=AcademyId#" class="openModal btn-sm btn btn-link" title="Edit details" data-id="#=Id#">\
                                    # if(Title == null) { # <span class="btn btn-xs btn-light">@T("Admin.Configuration.NoTitle")</span> #}' +
                                   '  else { # #=Title# #} #</a>'
                    },{
                        field: "Path",
                        title: "@T("Admin.Configuration.Path")",
                        template: '<a href="#=Path#" class="btn-sm btn btn-link" target="_blank">\
                                       #=Path#\
                                   </a>',
                    },{
                        field: "Id",
                        title: "@T("admin.common.delete")",
                        width: 80,
                        filterable: false,
                        headerAttributes: { style: "text-align:center" },
                        attributes: { style: "text-align:center" },
                        template: '<a href="javascript:void(0)" data-id="#=Id#" class="btn btn-sm btn-clean btn-icon Delete" title="Delete">\
                                        <i class="la la-trash"></i>\
                                    </a>'
                    }
                ]
            });
            $("body").on("click", "#academyfile_datatable .Delete", function () {
                Swal.fire({
                    title: 'Eminmisiniz?',
                    text: "Kaydı silmek istediğiniz eminmisiniz?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet',
                    cancelButtonText: 'Hayır',
                    timer: 3000,
                    timerProgressBar: true
                }).then((result) => {
                    if (result.value) {
                        var id = $(this).attr("data-id");
                        var entityKey = $(this).attr("data-key");
                        var entityGrop = $(this).attr("data-group");
                        $.ajax({
                            type: "POST",
                            url: '/admin/academy/AcademyFile',
                            data: { id: id, entityKey: entityKey, entityGrop: entityGrop, delete: true },
                            success: function (data) {
                                $("#academyfile_datatable").data("kendoGrid").dataSource.read();
                                Swal.fire({
                                    title: 'Başarılı',
                                    icon: 'success',
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                    timerProgressBar: true
                                });
                            },
                            error: function (d) {
                                console.log(d);
                            }
                        });
                    }
                })
            });

            $("#academyvideo_datatable").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "/Admin/Academy/GetAcademyVideoFilteredItems",
                            type: "POST",
                            dataType: "json",
                            data: function () {
                                var data = {
                                    "AcademyId": '@Model.Id'
                                };
                                addAntiForgeryToken(data);
                                return data;
                            }
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "RecordsFiltered",
                        errors: "Errors"
                    },
                    requestEnd: function (e) {
                        if (e.type == "create" || e.type == "update") {
                            this.read();
                        }
                    },
                    error: function (e) {
                        console.log(e);
                        this.cancelChanges();
                    },
                    pageSize: 10,
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true,
                    pageSizes: [10, 15, 20, 50, 100, 200, 300, 500, 1000, 3000],
                    @Html.Partial("_GridPagerMessages")
                },
                filterable: true,
                scrollable: false,
                toolbar: kendo.template('<a href="javascript:void(0)" data-href="/Admin/Academy/AcademyVideo/0?AcademyId=@Model.Id" class="btnDisableable openModal btn btn-success btn-sm"><i class="ki ki-plus icon-xs"></i> @T("Admin.Configuration.AddNew")</a>'),
                columns: [{
                        field: "Title",
                        title: " @T("Admin.Configuration.Title")",
                        template: '<a href=javascript:void(0)" data-href="/Admin/Academy/AcademyVideo/#=Id#?AcademyId=#=AcademyId#" class="openModal btn-sm btn btn-link" title="Edit details" data-id="#=Id#">\
                                    # if(Title == null) { # <span class="btn btn-xs btn-light">@T("Admin.Configuration.NoTitle")</span> #}' +
                                   '  else { # #=Title# #} #</a>'
                    },{
                        field: "Path",
                        title: "Video @T("Admin.Configuration.Path")"
                    },{
                        field: "AcademyVideoResourceName",
                        title: "@T("Admin.Configuration.AcademyVideoResource")"
                    },{
                        field: "Id",
                        title: "@T("admin.common.delete")",
                        width: 80,
                        filterable: false,
                        headerAttributes: { style: "text-align:center" },
                        attributes: { style: "text-align:center" },
                        template: '<a href="javascript:void(0)" data-id="#=Id#" class="btn btn-sm btn-clean btn-icon Delete" title="Delete">\
                                        <i class="la la-trash"></i>\
                                    </a>'
                    }
                ]
            });
            $("body").on("click", "#academyvideo_datatable .Delete", function () {
                Swal.fire({
                    title: 'Eminmisiniz?',
                    text: "Kaydı silmek istediğiniz eminmisiniz?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet',
                    cancelButtonText: 'Hayır',
                    timer: 3000,
                    timerProgressBar: true
                }).then((result) => {
                    if (result.value) {
                        var id = $(this).attr("data-id");
                        var entityKey = $(this).attr("data-key");
                        var entityGrop = $(this).attr("data-group");
                        $.ajax({
                            type: "POST",
                            url: '/admin/academy/AcademyVideo',
                            data: { id: id, entityKey: entityKey, entityGrop: entityGrop, delete: true },
                            success: function (data) {
                                $("#academyvideo_datatable").data("kendoGrid").dataSource.read();
                                Swal.fire({
                                    title: 'Başarılı',
                                    icon: 'success',
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                    timerProgressBar: true
                                });
                            },
                            error: function (d) {
                                console.log(d);
                            }
                        });
                    }
                })
            });
        });
    </script>
}
