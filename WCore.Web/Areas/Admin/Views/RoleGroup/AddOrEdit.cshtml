@model WCore.Web.Areas.Admin.Models.Roles.RoleGroupModel
@using WCore.Framework.Extensions;
@{
    ViewData["PageMainTitle"] = T("Admin.Configuration.RoleGroups.Title");
    ViewData["PageTitle"] = T("Admin.Configuration.RoleGroups.List");
    ViewData["SystemTitle"] = ViewData["PageTitle"] + " / " + ViewData["PageMainTitle"];
    ViewData["ControllerName"] = "RoleGroup";
}
<div class="content  d-flex flex-column flex-column-fluid" id="kt_content">
    <div class="subheader py-2 py-lg-4  subheader-solid " id="kt_subheader">
        <div class=" container-fluid  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <div class="d-flex align-items-center flex-wrap mr-2">
                <h5 class="text-dark font-weight-bold mt-2 mb-2 mr-5">
                    @ViewData["PageTitle"]
                </h5>
                <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                    <li class="breadcrumb-item">
                        <a href="/admin/rolegroup/list" class="text-muted">
                            @ViewData["PageMainTitle"]
                        </a>
                    </li>
                </ul>
            </div>
            <div class="d-flex align-items-center">
                <partial name="_AddOrEditHeaderButtons" model="@Tuple.Create(Model.Id,"RoleGroupForm")" />
            </div>
        </div>
    </div>
    <div class="d-flex flex-column-fluid">
        <div class="container-fluid">
            <form id="RoleGroupForm" asp-action="AddOrEdit" asp-controller="@ViewData["ControllerName"]" enctype="multipart/form-data">
                <div class="card card-custom">
                    <div class="card-body">
                        <ul class="nav nav-tabs nav-bold nav-tabs-line nav-tabs-line-3x mb-5">
                            <li class="nav-item mr-3">
                                <a class="nav-link active" data-toggle="tab" href="#kt_user_edit_tab_1">
                                    <span class="nav-icon text-center">
                                        <i class="fa fa-pen"></i>
                                    </span>
                                    <span class="nav-text font-size-lg">Detaylar</span>
                                </a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane show active px-7" id="kt_user_edit_tab_1" role="tabpanel">
                                <div class="row">
                                    <div class="col-xl-12 my-2">
                                        <div class="form-group row">
                                            <WCore-label asp-for="Name" />
                                            <div class="col-lg-10 col-md-6 col-sm-12">
                                                <WCore-editor asp-for="Name" asp-required="true" asp-type="form-control form-control-sm form-control-solid" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <WCore-label asp-for="RoleGroupType" />
                                            <div class="col-lg-10 col-md-6 col-sm-12">
                                                <select asp-for="RoleGroupType"
                                                        class="form-control form-control-sm form-control-solid"
                                                        asp-items="Model.RoleGroupTypes">
                                                </select>
                                            </div>
                                        </div>
                                        <input type="hidden" asp-for="Id" />
                                    </div>
                                </div>
                                @if (Model.Id != 0)
                                {
                                    <div class="row">
                                        <div class="col-xl-12 my-2">
                                            <div id="menu_datatable"></div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $("#RoleGroupForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            var serialize = form.serialize();
            var url = form.attr('action');

            var id = @Model.Id;
            $.ajax({
                type: "POST",
                url: "/admin/" + url,
                data: serialize,
                success: function (data) {
                    if (id == 0) {
                        window.location.href = "/Admin/@ViewData["ControllerName"]/";
                    }
                    else {
                        Swal.fire({
                            title: 'Başarılı',
                            text: "Kaydı düzenlemeye devam etmek istermisiniz?",
                            icon: 'success',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Evet',
                            cancelButtonText: 'Hayır',
                            timer: 3000,
                            timerProgressBar: true
                        }).then((result) => {
                            if (!result.value) {
                                window.location.href = "/Admin/@ViewData["ControllerName"]/";
                            }
                        })
                    }
                }
            });
        });

        @if(Model.Id != 0)
        {
            <text>
                var dataSource = new kendo.data.TreeListDataSource({
                    transport: {
                        type: "json",
                        read: {
                            url: "/admin/RoleGroup/GetMenuFilteredItems?roleGroupId=@Model.Id",
                            type: "POST",
                            dataType: "json",
                            contentType: "application/json"
                        }
                    },
                    schema: {
                        model: {
                            id: "Id",
                            parentId: "ParentId",
                            fields: {
                                Id: { type: "number", nullable: false },
                                ParentId: { field: "ParentId", nullable: true, editable: true, type: "number" },
                                Name: { editable: true, type: "string" },
                                Slug: { editable: true, type: "string" },
                                DisplayOrder: { editable: true, type: "number" },
                                IsActive: { editable: true, type: "bool" }
                            }
                        }
                    },
                    requestEnd: function (e) {
                        console.log(e.type);
                        if (e.type == "create" || e.type == "update") {
                            this.read();
                        }
                    },
                    error: function (e) {
                        console.log(e);
                        // Cancel the changes
                        this.cancelChanges();
                    },
                });
                $(document).ready(function () {
                    $("#menu_datatable").kendoTreeList({
                        dataSource: dataSource,
                        height: 540,
                        autoSync: true,
                        toolbar: ["search"],
                        columns: [{
                            field: "Id",
                            title: "Id",
                        },{
                            field: "ControllerGroup",
                            title: "Adı",
                        },{
                            field: "Controller",
                            title: "Controller",
                        },{
                            field: "Action",
                            title: "Action",
                        },{
                            field: "AreaName",
                            title: "Area Name",
                        },{
                            field: "DisplayOrder",
                            title: "DisplayOrder",
                            width: '120px',
                        },{
                            field: "Id",
                            title: "Görünürlük",
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: '# if(IsHidden) {# Aktif #} else {# Pasif #} #',
                            width: '120px',
                        },{
                            field: "IsActive",
                            title: "Durum",
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: '# if(IsActive) {# Aktif #} else {# Pasif #} #',
                            filterable: false,
                            width: '120px',
                        },{
                            field: "RoleMenu",
                            title: "RoleMenu",
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: '# if(RoleMenu) {# Aktif #} else {# Pasif #} #',
                            filterable: false,
                            width: '120px',
                        },{
                            field: "Id",
                            title: "Izin",
                            template: "# if (RoleMenu) { #" +
                                "<div class='col-3'> <span class='kt-switch kt-switch--outline kt-switch--sm kt-switch--icon kt-switch--success'> <label> <input type='checkbox' data-type='Role'  checked='' data-menuid='#=Id#' > <span></span> </label> </span> </div>" +
                                "# } else { #" +
                                "<div class='col-3'> <span class='kt-switch kt-switch--outline kt-switch--sm kt-switch--icon kt-switch--success'> <label> <input type='checkbox' data-type='Role' data-menuid='#=Id#'> <span></span> </label> </span> </div>" +
                                "# } #",
                            width: '120px',
                            },
                        ]
                    });
                });
                $("#menu_datatable").delegate("input[data-type='Role']", "click", function () {
                    var menuId = $(this).attr("data-menuid");
                    var roleGroupId = @Model.Id;

                    $.ajax({
                        url: '/admin/rolegroup/ChangeRoleMenu',
                        contentType: "application/x-www-form-urlencoded",
                        type: 'post',
                        data: {
                            "menuId": menuId,
                            "roleGroupId": roleGroupId
                        },
                        success: function (datas, textStatus, jQxhr) {
                            Swal.fire({
                                title: 'Başarılı',
                                icon: 'success',
                                showCancelButton: false,
                                showConfirmButton: false,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Evet',
                                cancelButtonText: 'Hayır',
                                timer: 250,
                                timerProgressBar: true
                            });
                        },
                        error: function (jqXhr, textStatus, errorThrown) {
                            Swal.fire({
                                title: textStatus,
                                icon: 'danger',
                                showCancelButton: false,
                                showConfirmButton: false,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Evet',
                                cancelButtonText: 'Hayır',
                                timer: 5000,
                                timerProgressBar: true
                            });

                        }
                    });
                });
            </text>
        }
    </script>
}