@{
    var _workContext = EngineContext.Current.Resolve<WCore.Core.IWorkContext>();
    var _seoSettings = EngineContext.Current.Resolve<WCore.Core.Domain.Settings.SeoSettings>();
    var _storeInformationSettings = EngineContext.Current.Resolve<StoreInformationSettings>();

    var hasTopbar = false;
    var isVerticleLeft = false;
    var headerId = "header";
    var headerClassName = "";
    var topbarClassName = "container";
}
@switch (_storeInformationSettings.DefaultStoreThemeHeaderType)
{
    case "dark":
        headerClassName = "dark";
        break;
    case "dark topbar":
        hasTopbar = true;
        headerClassName = "dark";
        break;
    case "dark with topbar":
        hasTopbar = true;
        headerClassName = "light topbar-dark";
        break;
    case "default":
        headerClassName = "default";
        hasTopbar = true;
        break;
    case "fancy":
        headerClassName = "fancy";
        break;
    case "fancy topbar":
        hasTopbar = true;
        headerClassName = "fancy";
        break;
    case "full width":
        hasTopbar = true;
        topbarClassName = "container-fluid";
        headerClassName = "default fullWidth light";
        break;
    case "light":
        headerClassName = "light";
        break;
    case "light topbar":
        headerClassName = "light";
        hasTopbar = true;
        break;
    case "light transparent topbar":
        headerClassName = "transparent light";
        hasTopbar = true;
        break;
    case "light transparent topbar fullwidth":
        topbarClassName = "container-fluid";
        headerClassName = "transparent fullWidth light";
        hasTopbar = true;
        break;
    case "left menu":
        headerClassName = "light left-menu";
        break;
    case "left fixed":
        break;
    case "logo center":
        headerClassName = "light logo-center";
        break;
    case "onepage":
        break;
    case "transparent":
        headerClassName = "default";
        break;
    case "transparent fullwidth":
        headerClassName = "default fullWidth";
        break;
    case "transparent overlay":
        headerClassName = "transparent";
        break;
    case "transparent topbar":
        headerClassName = "transparent";
        hasTopbar = true;
        break;
    case "vertical left":
        headerClassName = "vertical-menu";
        headerId = "left-header";
        isVerticleLeft = true;
        break;
    default:
        headerClassName = "default";
        topbarClassName = "container";
        hasTopbar = true;
        break;
}
@if (isVerticleLeft)
{
    <div class="menu-responsive"><a href="/@_workContext.WorkingLanguage.UniqueSeoCode/"> <img src="@_storeInformationSettings.LogoPicture" class="h-100" /></a> <a class="but" href="#"><span class="ti-menu"></span> </a></div>
}
<header id="@headerId" class="header @headerClassName">
    @if (hasTopbar)
    {
        <div class="topbar">
            <div class="@topbarClassName">
                <div class="row">
                    <div class="col-lg-6 col-md-6 xs-mb-10">
                        <div class="topbar-call text-center text-md-left">
                            <ul>
                                <li><i class="fa fa-envelope-o theme-color"></i><a href="mailto:@T("common.contactus.top.email")"> <span>@T("common.contactus.top.email") </span></a></li>
                                <li><i class="fa fa-phone"></i> <a href="tel:@T("common.contactus.top.phone")"> <span>@T("common.contactus.top.phone") </span> </a> </li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6">
                        <div class="topbar-social text-center text-md-right">
                            <ul>
                                @await Component.InvokeAsync("LanguageSelector")
                                @await Component.InvokeAsync("CountrySelector")
                                <li>
                                    <div class="dropdown p-0">
                                        @if (_workContext.CurrentUser.UserType != WCore.Core.Domain.Users.UserType.Guest)
                                        {
                                            <a href="javascript:void(0)" class="btn btn-primary btn-sm dropdown-toggle text-white rounded-0" data-toggle="dropdown">@_workContext.CurrentUser.Email</a>
                                        }
                                        else
                                        {
                                            <a href="/auth" class="btn btn-primary btn-sm text-white rounded-0">@T("common.header.login")</a>
                                        }
                                        <div class="dropdown-menu rounded-0">
                                            @switch (_workContext.CurrentUser.UserType)
                                            {
                                                case WCore.Core.Domain.Users.UserType.Registered:
                                                    <a class="ml-0 pl-2 dropdown-item bg-primary text-white" href="/akademi"><i class="icon-user"></i> @T("common.user.academy")</a>
                                                    <a class="ml-0 pl-2 dropdown-item" href="/user"><i class="icon-user"></i> @T("common.user.profile.title")</a>
                                                    <a class="ml-0 pl-2 dropdown-item" href="/auth/logout"><i class="icon-logout"></i>@T("common.header.logout")</a>
                                                    break;
                                                case WCore.Core.Domain.Users.UserType.UnRegistered:
                                                    break;
                                                case WCore.Core.Domain.Users.UserType.SearchEngine:
                                                    break;
                                                case WCore.Core.Domain.Users.UserType.Task:
                                                    break;
                                                case WCore.Core.Domain.Users.UserType.Agency:
                                                    break;
                                                case WCore.Core.Domain.Users.UserType.Academy:
                                                    <a class="ml-0 pl-2 dropdown-item bg-primary text-white" href="/akademi"><i class="icon-user"></i> @T("common.user.academy")</a>
                                                    <a class="ml-0 pl-2 dropdown-item" href="/user"><i class="icon-user"></i> @T("common.user.profile.title")</a>
                                                    <a class="ml-0 pl-2 dropdown-item" href="/auth/logout"><i class="icon-logout"></i>@T("common.header.logout")</a>
                                                    break;
                                                case WCore.Core.Domain.Users.UserType.SystemAdministrator:
                                                    <a class="ml-0 pl-2 dropdown-item bg-danger text-white" href="/admin"><i class="icon-user"></i> @T("common.user.admin")</a>
                                                    <a class="ml-0 pl-2 dropdown-item bg-primary text-white" href="/akademi"><i class="icon-user"></i> @T("common.user.academy")</a>
                                                    <a class="ml-0 pl-2 dropdown-item" href="/user"><i class="icon-user"></i> @T("common.user.profile.title")</a>
                                                    <a class="ml-0 pl-2 dropdown-item" href="/@_workContext.WorkingLanguage.UniqueSeoCode/logout"><i class="icon-logout"></i>@T("common.header.logout")</a>
                                                    break;
                                                default:
                                                    break;
                                            }
                                        </div>
                                    </div>
                                </li>
                                @if (!string.IsNullOrEmpty(_storeInformationSettings.FacebookLink))
                                {
                                    <li><a target="_blank" href="@_storeInformationSettings.FacebookLink"><span class="ti-facebook"></span></a></li>
                                }
                                @if (!string.IsNullOrEmpty(_storeInformationSettings.YoutubeLink))
                                {
                                    <li><a target="_blank" href="@_storeInformationSettings.YoutubeLink"><span class="ti-youtube"></span></a></li>
                                }
                                @if (!string.IsNullOrEmpty(_storeInformationSettings.TwitterLink))
                                {
                                    <li><a target="_blank" href="@_storeInformationSettings.TwitterLink"><span class="ti-twitter"></span></a></li>
                                }
                                @if (!string.IsNullOrEmpty(_storeInformationSettings.InstagramLink))
                                {
                                    <li><a target="_blank" href="@_storeInformationSettings.InstagramLink"><span class="ti-instagram"></span></a></li>
                                }
                                @if (!string.IsNullOrEmpty(_storeInformationSettings.LinkedinLink))
                                {
                                    <li><a target="_blank" href="@_storeInformationSettings.LinkedinLink"><span class="ti-linkedin"></span></a></li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <!--=================================
     mega menu -->
    <div class="menu">
        @await Component.InvokeAsync("TopMenu")
    </div>
    @if (isVerticleLeft)
    {
        <div class="menu-widgets text-white">
            <div class="social-icons social-border rounded color-hover text-center">
                <ul>
                    @if (!string.IsNullOrEmpty(_storeInformationSettings.FacebookLink))
                    {
                        <li class="social-facebook"><a target="_blank" href="@_storeInformationSettings.FacebookLink"><span class="ti-facebook"></span></a></li>
                    }
                    @if (!string.IsNullOrEmpty(_storeInformationSettings.YoutubeLink))
                    {
                        <li class="social-facebook"><a target="_blank" href="@_storeInformationSettings.YoutubeLink"><span class="ti-youtube"></span></a></li>
                    }
                    @if (!string.IsNullOrEmpty(_storeInformationSettings.TwitterLink))
                    {
                        <li class="social-facebook"><a target="_blank" href="@_storeInformationSettings.TwitterLink"><span class="ti-twitter"></span></a></li>
                    }
                    @if (!string.IsNullOrEmpty(_storeInformationSettings.InstagramLink))
                    {
                        <li class="social-facebook"><a target="_blank" href="@_storeInformationSettings.InstagramLink"><span class="ti-instagram"></span></a></li>
                    }
                    @if (!string.IsNullOrEmpty(_storeInformationSettings.LinkedinLink))
                    {
                        <li class="social-facebook"><a target="_blank" href="@_storeInformationSettings.LinkedinLink"><span class="ti-linkedin"></span></a></li>
                    }
                </ul>
            </div>
        </div>
    }
</header>
<header class="header menu_fixed d-none">
    <div id="preloader"><div data-loader="circle-side"></div></div><!-- /Page Preload -->
    <div id="logo">
        <a href="/@_workContext.WorkingLanguage.UniqueSeoCode">
            <img src="@_storeInformationSettings.LogoPicture" width="110" alt="" class="logo_normal">
            <img src="@_storeInformationSettings.StickyPicture" width="110" alt="" class="logo_sticky">
        </a>
    </div>
    <ul id="top_menu">
        @if (ViewBag.Page != "ShoppingCart")
        {
            <li>
                <a id="sidebarmenu-toggle" href="#" class="open-menu cart-menu-btn toggle" title="Cart"><strong>0</strong></a>
            </li>
        }
        <li><a href="/user/wishes" class="wishlist_bt_top" title="Your wishlist">@T("common.header.yourwishlist")</a></li>
    </ul>
</header>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-modal="true" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header align-items-start">
                <div class="modal-title" id="exampleModalLabel">
                    <div class="section-title mb-10">
                        <h6>EXPERTISE</h6>
                        <h2>Modal title</h2>
                        <p>We are an innovative agency. We develop and design customers around the world. Our clients are some of the most forward-looking companies in the world.</p>
                    </div>
                </div>
                <button type="button" class="close btn btn-lg p-0 text-dark" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <span class="dropcap square">Y</span>ou can use model anywhere in your website consectetur adipisicing elit. At vel sed corporis delectus quo ea molestias a ab ad officiis eaque natus animi reiciendis sint beatae, dolor inventore praesentium lorem qui.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>