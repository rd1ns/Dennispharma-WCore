@{
    ViewData["PageMainTitle"] = T("Admin.Configuration.Currencies.Title");
    ViewData["PageTitle"] = T("Admin.Configuration.Currencies.List");
    ViewData["Title"] = ViewData["PageTitle"] + " / " + ViewData["PageMainTitle"];
}
<div class="content  d-flex flex-column flex-column-fluid" id="kt_content">
    <div class="subheader py-2 py-lg-6  subheader-solid " id="kt_subheader">
        <div class=" container-fluid  d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <div class="d-flex align-items-center flex-wrap mr-1">
                <div class="d-flex align-items-baseline flex-wrap mr-5">
                    <h5 class="text-dark font-weight-bold my-1 mr-5">
                        @ViewData["PageTitle"]
                    </h5>
                    <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                        <li class="breadcrumb-item">
                            <a href="" class="text-muted">
                                @ViewData["PageMainTitle"]
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="d-flex align-items-center">
                <a href="/Admin/currency/AddOrEdit/0" class="btnDisableable btn btn-sm btn-success font-weight-bolder mr-2">
                    <i class="ki ki-plus icon-xs"></i>
                    @T("Admin.Configuration.AddNew")
                </a>                
            </div>
        </div>
    </div>
    <div class="d-flex flex-column-fluid">
        <div class="container-fluid">
            <div class="card">
                <div class="card-body p-1">
                    <div id="currency_datatable"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            var currencyDatatable = $("#currency_datatable").kendoGrid({
                    dataSource: {
                        type: "json",
                        transport: {
                            read: {
                                url: "/Admin/Currency/GetFilteredItems",
                                type: "POST",
                                dataType: "json"
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "RecordsFiltered",
                            errors: "Errors"
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update") {
                                this.read();
                            }
                        },
                        error: function (e) {
                            console.log(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        pageSize: 10,
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true
                    },
                    toolbar: ["search"],
                    pageable: {
                        refresh: true,
                        pageSizes: [10, 15, 20, 50, 100, 200, 300, 500, 1000, 3000,"all"],
                        @Html.Partial("_GridPagerMessages")
                    },
                    filterable: true,
                    scrollable: false,
                    columns: [
                    {
                        title: "@T("Admin.Configuration.Currencies.Fields.Name")",
                        field: "Name",
                        template: '<a href="/admin/currency/addoredit/#=Id#" class="btn btn-sm btn-link" title="Edit details"><i class="la la-edit"></i> #=Name#</a>'
                    },
                    {
                        title: "@T("Admin.Configuration.Currencies.Fields.CurrencyCode")",
                        field: "CurrencyCode",
                    },
                    {
                        title: "@T("Admin.Configuration.Currencies.Fields.Rate")",
                        field: "Rate",
                    },
                    {
                        field: "Published",
                        title: "@T("Admin.Configuration.Published")",
                        headerAttributes: { style: "text-align:center" },
                        attributes: { style: "text-align:center" },
                        template: '# if(Published) {# <span class="btn btn-sm btn-success">@T("admin.configuration.true")</span> #} else {# <span class="btn btn-sm btn-danger">@T("admin.configuration.false")</span> #} #',
                        width: 120,
                        filterable: false
                    },
                    {
                        field: "Id",
                        title: "@T("admin.common.delete")",
                        width: 80,
                        filterable: false,
                        headerAttributes: { style: "text-align:center" },
                        attributes: { style: "text-align:center" },
                        template: '<a href="javascript:void(0)" data-id="#=Id#" class="btn btn-sm btn-clean btn-icon btnDelete" title="Delete">\
                                        <i class="la la-trash"></i>\
                                    </a>'
                    }]
                });
            $("body").on("click", "#currency_datatable .btnDelete", function () {
                Swal.fire({
                    title: 'Eminmisiniz?',
                    text: "Kaydı silmek istediğiniz eminmisiniz?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet',
                    cancelButtonText: 'Hayır',
                    timer: 3000,
                    timerProgressBar: true
                }).then((result) => {
                    if (result.value) {
                        var id = $(this).attr("data-id");
                        console.log(id);
                        $.ajax({
                            type: "POST",
                            url: '/admin/currency/AddOrEdit',
                            data: { id: id, delete: true },
                            success: function (data) {
                                currencyDatatable.data("kendoGrid").dataSource.read();
                                Swal.fire({
                                    title: 'Başarılı',
                                    icon: 'success',
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    timer: 1000,
                                    timerProgressBar: true
                                });
                            },
                            error: function (d) {
                                console.log(d);
                            }
                        });
                    }
                })
            });
        });
    </script>
}